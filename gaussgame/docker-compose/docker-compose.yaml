services:
  core:
    image: bletvaska/gaussgame-core:latest
    pull_policy: always
#    build: ..
    depends_on:
      - mosquitto
    restart: always
    environment:
      GAUSS_MQTT_URI: ${GAUSS_MQTT_URI:-mqtt://@mosquitto:1883/steelpark/gauss}
      GAUSS_DB_URI: ${GAUSS_DB_URI:-sqlite:////app/db.sqlite}
      GAUSS_BASE_TOPIC: ${GAUSS_BASE_TOPIC:-steelpark/gauss}
      # PULSE_SERVER: unix:/run/user/1000/pulse/native
      TZ: Europe/Bratislava
    volumes:
      - db:/app
      # - /run/user/1000/pulse:/run/user/1000/pulse
    command: [ "python3", "-m", "gaussgame"]
    healthcheck:
      test: mosquitto_sub -h mosquitto -t kulturpark/tapgame/backend/status -C 1 | jq --exit-status '.status == "online"' > /dev/null || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 120s


  bridge:
    image: bletvaska/gaussgame-core:latest
    pull_policy: always
    depends_on:
    - mosquitto
    restart: always
    environment:
      GAUSS_BROKER: mosquitto
      GAUSS_INPUT_PIN: 11
      TZ: Europe/Bratislava
    privileged: true
    user: root:root
    devices:
    - /dev/gpiomem
    - /dev/gpiomem4
    command: gaussbridge


  ui:
    image: dillir/gauss-frontend:latest
    pull_policy: always
    depends_on:
      - mosquitto
      - core
    restart: always
    ports:
      - 80:80
    environment:
      TZ: Europe/Bratislava


  mosquitto:
    # url: https://hub.docker.com/_/eclipse-mosquitto
    image: eclipse-mosquitto:2.0-openssl
    restart: always
    ports:
    - 8000:8000
    - 1883:1883
    volumes:
      - ./mosquitto:/mosquitto/config:ro
    environment:
      TZ: Europe/Bratislava


volumes:
  db: {}

